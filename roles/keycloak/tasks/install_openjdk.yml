---
- name: "Install packages."
  ansible.builtin.package:
    name: "{{ autonomy_keycloak_packages }}"
    state: present
  become: true
  vars:
    __openjdk_package:
      - "openjdk-{{ autonomy_keycloak_openjdk_version }}-jre"
    __keycloak_packages: "{{ autonomy_keycloak_packages + __openjdk_package }}"
  tags:
    - install-packages

- name: "Download Keycloak Sources."
  ansible.builtin.get_url:
    url: "{{ item.url }}"
    dest: "/tmp/{{ item.file }}"
    checksum: "{{ item.checksum_type }}:{{ item.checksum }}"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: '0644'
  loop: "{{ autonomy_keycloak_sources }}"
  become: false

- name: "Create Keycloak Directory."
  ansible.builtin.file:
    path: "{{ autonomy_keycloak_alt_home }}"
    state: directory
    owner: root
    group: root
    mode: "0755"
  become: true

# - name: "Create Keycloak Data Directory."
#   ansible.builtin.file:
#     path: "{{ autonomy_keycloak_data_dir }}"
#     state: directory
#     owner: root
#     group: root
#     mode: "0755"
#   become: true
#   when:
#     - keycloak_mode == "standalone"

- name: "Extract Sources."
  ansible.builtin.unarchive:
    src: "/tmp/{{ item.file }}"
    dest: "{{ autonomy_keycloak_alt_home }}"
    remote_src: yes
    owner: root
    group: root
    extra_opts: [--strip-components=1]
    creates: "{{ autonomy_keycloak_license_path }}"
  become: true
  loop: "{{ autonomy_keycloak_sources }}"

- name: "Create a symbolic link keycloak -> keycloak-{{ autonomy_keycloak_version }}."
  ansible.builtin.file:
    src: "{{ autonomy_keycloak_alt_home }}"
    dest: "{{ autonomy_keycloak_home }}"
    owner: root
    group: root
    state: link
  become: true

- name: "Install keycloak.conf."
  ansible.builtin.template:
    src: "opt/keycloak/conf/{{ autonomy_keycloak_config_file }}.j2"
    dest: "{{ autonomy_keycloak_config_path }}"
    owner: root
    group: root
    mode: "0640"
  become: true
  notify:
    - "restart keycloak"

- name: "Install keycloak.service."
  ansible.builtin.template:
    src: "etc/systemd/system/service.conf.j2"
    dest: "/etc/systemd/system/keycloak.service"
    owner: root
    group: root
    mode: "0644"
  become: true
  notify:
    - "daemon reload"
    - "restart keycloak"
