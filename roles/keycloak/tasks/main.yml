---
# tasks file for keycloak
- name: "Include OS-specific variables."
  include_vars: "{{ lookup('first_found', params) }}"
  vars:
    params:
      files: "{{ __os_variables_files }}"
      paths:
        - "vars"
  become: false
  tags:
    - install-packages

- name: "Get keycloak db password."
  ansible.builtin.set_fact:
    autonomy_keycloak_db_password: "{{ __password }}"
  vars:
    __password_store_id: "{{ autonomy_passdb }}/{{ autonomy_domain }}/services/mysql/{{ autonomy_keycloak_db_user }}"
    __password_lookup: "{{ __password_store_id }}"
    __password: "{{ lookup('community.general.passwordstore', __password_lookup) }}"
  when:
    autonomy_keycloak_db_password == "password"

- name: "Install Keycloak."
  include_tasks: "install.yml"

# ==================================================================================================
#
# Next we check if the keycloak admin user exists.  If the user does not exist, we need to run the
# initial setup.
#
# ==================================================================================================
- name: "Check if Keycloak Admin User exists."
  community.mysql.mysql_query:
    login_host: "{{ autonomy_keycloak_db_server }}"
    login_db: "{{ autonomy_keycloak_db_name }}"
    login_user: "{{ autonomy_keycloak_db_user }}"
    login_password: "{{ __password }}"
    query: SELECT * FROM USER_ENTITY WHERE USERNAME=%(username)s
    named_args:
      username: "{{ autonomy_keycloak_admin_user }}"
  vars:
    __password_store_id: "{{ autonomy_passdb }}/{{ autonomy_domain }}/services/mysql/{{ autonomy_keycloak_db_user }}"
    __password_lookup: "{{ __password_store_id }}"
    __password: "{% if autonomy_keycloak_db_password == 'password' %}{{ lookup('community.general.passwordstore', __password_lookup) }}{% else %}{{ autonomy_keycloak_db_password }}{% endif %}"
  register: results
  failed_when:
    - results.failed
    - '"Table" not in results.msg'

# - name: "Check Results."
#   ansible.builtin.debug:
#     msg:
#       - "Results:"
#       - "  Rows: {{ results.rowcount[0] | default(0) }}"
#       - "  Failed: {{ results.failed }}"
#       - "  Full Results:"
#       - "     {{ results }}"

- name: "Run initial config."
  include_tasks: "initial_config.yml"
  when:
    - (results.rowcount is not defined) or (results.rowcount is defined and results.rowcount[0] != 1)

# ==================================================================================================
#
# Initial setup complete.  Now we start keycloak for real.  Everything after this will require a
# running keycloak instance.
#
# ==================================================================================================
# - name: "Flush Handlers."
#   ansible.builtin.meta: flush_handlers

# - name: "Configure Keycloak."
#   include_tasks: "config.yml"
