---
# ==================================================================================================
#
# Task: Generate CA Private Key
#
# ==================================================================================================
- name: "Generate Root Certificate Authority Certificate Signing Requests (CSR)."
  community.crypto.openssl_csr:
    path: "{{ autonomy_ownca_ca_directory }}/csr/{{ autonomy_org_name }}-{{ item.name }}-ca.csr"
    privatekey_path: "{{ item.private_key_path | default(__private_key_path) }}"
    privatekey_passphrase: "{{ lookup('community.general.passwordstore', __password_lookup) }}"
    common_name: "{{ item.common_name }}"
    country_name: "{{ item.country_name | default(omit) }}"
    email_address: "{{ item.email_address | default(omit) }}"
    organization_name: "{{ item.organization_name | default(autonomy_org_name | title ) }}"
    organizational_unit_name: "{{ item.org_unit_name | default(omit) | title }}"
    state_or_province_name: "{{ item.region_name | default(omit) }}"
    key_usage: "{{ item.keyusage }}"
    key_usage_critical: "{{ item.keyusage_critical | default('no') }}"
    basic_constraints: "{{ item.basic_constraints }}"
    basic_constraints_critical: "{{ item.basic_constraints_critical | default('no') }}"
    create_subject_key_identifier: yes
    crl_distribution_points:
      - full_name: "URI:{{ autonomy_ownca_crl_distribution_point }}/{{ autonomy_org_name }}-{{ item.name }}-ca.crl"
        reasons:
          - key_compromise
          - ca_compromise
          - affiliation_changed
          - superseded
          - cessation_of_operation
          - certificate_hold
          - privilege_withdrawn
          - aa_compromise
    owner: "{{ autonomy_user }}"
    group: "{{ autonomy_group }}"
    mode: "0400"
    backup: yes
    state: present
  loop: "{{ autonomy_ownca_certificate_authorities }}"
  delegate_to: localhost
  run_once: yes
  become: no
  vars:
    __password_store_id: "{{ autonomy_passdb }}/{{ item.domain }}/ownca/ownca_{{ item.ca_id }}_password"
    __password_lookup: "{{ __password_store_id }}"
    __private_key_path: "{{ autonomy_ownca_ca_private_key_directory }}/{{ autonomy_org_name }}-{{ item.name }}-ca_{{ autonomy_ownca_privatekey_type | lower }}.key"
  when:
    - item.name == "root"

- name: "Generate Root Certificate Authority Selfsigned Certificate."
  community.crypto.x509_certificate:
    path: "{{ autonomy_ownca_ca_directory }}/certs/{{ autonomy_org_name }}-{{ item.name }}-ca_{{ autonomy_ownca_privatekey_type | lower }}.crt"
    privatekey_path: "{{ autonomy_ownca_ca_private_key_directory }}/{{ autonomy_org_name }}-{{ item.name }}-ca_{{ autonomy_ownca_privatekey_type | lower }}.key"
    privatekey_passphrase: "{{ lookup('community.general.passwordstore', __password_lookup) }}"
    csr_path: "{{ autonomy_ownca_ca_directory }}/csr/{{ autonomy_org_name }}-{{ item.name }}-ca.csr"
    ownca_not_after: "{{ autonomy_ownca_root_not_after }}"
    provider: "{{ item.provider }}"
    owner: "{{ autonomy_user }}"
    group: "{{ autonomy_group }}"
    mode: "0644"
    backup: yes
    state: present
    force: "{{ __autonomy_ownca_regenerate }}"
    return_content: yes
  loop: "{{ autonomy_ownca_certificate_authorities }}"
  delegate_to: localhost
  run_once: yes
  become: no
  vars:
    __password_store_id: "{{ autonomy_passdb }}/{{ autonomy_root_domain }}/ownca/ownca_root_password"
    __password_lookup: "{{ __password_store_id }}"
  notify:
    - "regenerate certificates"
  when:
    - item.provider == "selfsigned"
  register: __new_root

- name: "Get Root CA Cert information."
  community.crypto.x509_certificate_info:
    path: "{{ autonomy_ownca_ca_directory }}/certs/{{ autonomy_org_name }}-root-ca_{{ autonomy_ownca_privatekey_type | lower }}.crt"
  register: root_cert_info
