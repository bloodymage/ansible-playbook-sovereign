---
# ==================================================================================================
#
#
#
# ==================================================================================================
- name: "Install packages."
  ansible.builtin.apt:
    name: "{{ autonomy_ownca_host_packages }}"
    state: present
  become: yes
  when:
    - inventory_hostname not in groups['virtual_hosts'] | default([])

# ==================================================================================================
#
# Apache servers and openldap servers require different permissions for the private keys from other
# server types.
#
# ==================================================================================================
- name: "Check if host is in 'apache' or 'openldap' group."
  ansible.builtin.set_fact:
    autonomy_ownca_privatekeygroup: "ssl-cert"
    autonomy_ownca_privatekeymode: "0640"
    __autonomy_ownca_privatekey_dir_mode: "0750"
    __autonomy_ownca_privatekey_dir_group: "ssl-cert"
  when:
    - inventory_hostname in groups['apache_servers'] | default([])
    - inventory_hostname in groups['openldap_servers'] | default([])

# ==================================================================================================
#
# Create SSL Private Key and CRS Directories
#
# Creates the following Directories:
#   - {{ ownca_etc }}/private mode: 0700
#   - {{ ownca_etc }}/csr     mode: 0700
#   - {{ ownca_etc }}/certs   mode: 0755
#
# ==================================================================================================
- name: "Create SSL Directories."
  ansible.builtin.file:
    path: "{{ autonomy_ownca_etc }}/{{ item.name }}"
    state: directory
    owner: "{{ item.owner | default(autonomy_ownca_etc_owner) }}"
    group: "{{ item.group | default(autonomy_ownca_etc_group) }}"
    mode: "{{ item.mode }}"
  become: yes
  loop: "{{ autonomy_ownca_host_certs_directories }}"

- name: "Generate Host Private Key."
  community.crypto.openssl_privatekey:
    path: "{{ autonomy_ownca_etc_privatekey_path }}"
    passphrase: "{{ autonomy_ownca_host_privatekey_passphrase | default(omit) }}"
    type: "{{ __privatekey_type }}"
    size: "{{ autonomy_ownca_privatekey_size }}"
    curve: "{{ __curve }}"
    owner: "{{ autonomy_ownca_etc_owner }}"
    group: "{{ autonomy_ownca_privatekey_group }}"
    mode: "{{ autonomy_ownca_privatekey_mode }}"
    force: "{{ __host_privatekey_force_regeneration }}"
    backup: true
  become: true
  vars:
    __privatekey_tmp_type: >-
      {% if autonomy_ownca_host_privatekey_type.lower() in ['ed25519','ed448'] %}
      {{ autonomy_ownca_host_privatekey_type | capitalize }}
      {% else %}
      {{ autonomy_ownca_host_privatekey_type | upper }}
      {% endif %}
    __privatekey_type: "{{ __privatekey_tmp_type | trim }}"
    __curve: "{{ autonomy_ownca_ecc_curve if __privatekey_type == 'ECC' else omit }}"

- name: "Generate Host CSR."
  community.crypto.openssl_csr:
    country_name: "{{ autonomy_ownca_country_code | default(none) }}"
    state_or_province_name: "{{ autonomy_region | default(none) }}"
    locality_name: "{{ autonomy_loc_city | default(none) }}"
    organization_name: "{{ autonomy_org_name | title }}"
    organizational_unit_name: "{{ autonomy_org_unit_name | title }}"
    common_name: "{{ autonomy_fqdn }}"
    key_usage: "{{ autonomy_ownca_host_certs_key_usage }}"
    key_usage_critical: true
    extended_key_usage: "{{ autonomy_ownca_host_certs_extended_key_usage }}"
    extended_key_usage_critical: true
    privatekey_path: "{{ autonomy_ownca_etc_privatekey_path }}"
    subject_alt_name: "{{ autonomy_ownca_host_certs_subject_alt_name }}"
    crl_distribution_points:
      - full_name: "{{ __uri }}"
        reasons:
          - key_compromise
          - ca_compromise
          - affiliation_changed
          - superseded
          - cessation_of_operation
          - certificate_hold
          - privilege_withdrawn
          - aa_compromise
    path: "{{ autonomy_ownca_etc }}/csr/{{ autonomy_fqdn }}.csr"
    mode: "0644"
    owner: "{{ autonomy_ownca_etc_owner }}"
    group: "{{ autonomy_ownca_etc_group }}"
    backup: true
    force: "{{ __host_csr_force_regeneration }}"
  vars:
    __uri: >-
      URI:{{ autonomy_ownca_crl_distribution_point }}/
      {{ autonomy_org_name }}-{{ autonomy_org_unit_name }}-component.crl
  become: true

# ==================================================================================================
#
# Tasks:
#
#
# ==================================================================================================
- name: "Fetch CSRs."
  ansible.builtin.fetch:
    src: "{{ autonomy_ownca_etc }}/csr/{{ autonomy_fqdn }}.csr"
    dest: "{{ autonomy_ownca_hosts_directory }}/csr/"
    flat: true
  become: true
