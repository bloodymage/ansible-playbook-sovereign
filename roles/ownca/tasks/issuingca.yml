---
# ==================================================================================================
#
# Generate's the Issing CA's CSR.
#
# Note:
# - item[0].org_unit_name check in when clause is added because this loops through all Certificate
#   Authorities.  The 'Root' CA does not have an organizational unit.  It is the organization.
#
# ==================================================================================================
- name: "Generate Issuing Certificate Authority Certificate Signing Requests (CSR)."
  community.crypto.openssl_csr:
    path: "{{ autonomy_ownca_ca_directory }}/csr/{{ autonomy_org_name }}-{{ item[0].name }}-ca.csr"
    privatekey_path: "{{ item[0].privatekey_path | default(__privatekey_path) }}"
    privatekey_passphrase: "{{ lookup('community.general.passwordstore', __password_lookup) }}"
    common_name: "{{ item[0].common_name }}"
    country_name: "{{ item[0].country_name | default(omit) }}"
    email_address: "{{ item[0].email_address | default(omit) }}"
    organization_name: "{{ item[0].organization_name | default(autonomy_org_name | title ) }}"
    organizational_unit_name: "{{ item[0].org_unit_name | default(omit) | title }}"
    state_or_province_name: "{{ item[0].region_name | default(omit) }}"
    key_usage: "{{ item[0].keyusage }}"
    key_usage_critical: "{{ item[0].keyusage_critical | default('no') }}"
    basic_constraints: "{{ item[0].basic_constraints }}"
    basic_constraints_critical: "{{ item[0].basic_constraints_critical | default('no') }}"
    create_subject_key_identifier: yes
    authority_cert_issuer: "{{ item[1].subject_alt_name }}"
    authority_cert_serial_number: "{{ item[1].serial_number }}"
    authority_key_identifier: "{{ item[1].subject_key_identifier }}"
    crl_distribution_points:
      - full_name: "URI:{{ autonomy_ownca_crl_distribution_point }}/{{ autonomy_org_name }}-{{ item[0].name }}-ca.crl"
        reasons:
          - key_compromise
          - ca_compromise
          - affiliation_changed
          - superseded
          - cessation_of_operation
          - certificate_hold
          - privilege_withdrawn
          - aa_compromise
    owner: "{{ autonomy_user }}"
    group: "{{ autonomy_group }}"
    force: "{{ __ownca_issuingca_csr_force_regeneration }}"
    backup: yes
    state: present
  loop: "{{ autonomy_ownca_certificate_authorities | product(intermediate_cert_info.results) }}"
  delegate_to: localhost
  run_once: yes
  become: no
  vars:
    __password_store_id: "{{ autonomy_passdb }}/{{ item[0].domain }}/ownca/ownca_{{ item[0].ca_id }}_password"
    __password_lookup: "{{ __password_store_id }}"
    __privatekey_path: "{{ autonomy_ownca_ca_privatekey_directory }}/{{ autonomy_org_name }}-{{ item[0].name }}-ca-ca.key"
  when:
    - item[0].provider == "ownca"
    - item[0].ownca == "intermediate"
    - item[0].org_unit_name is defined
    - item[1].item.org_unit_name is defined
    - item[1].subject_key_identifier is defined
    - item[1].subject_alt_name is defined
    - item[1].serial_number is defined
    - item[0].org_unit_name == item[1].item.org_unit_name
  tags:
    - ownca
    - ownca-root
    - ownca-intermediate
    - ownca-issuing

- name: "Generate Issuing CA Signed Certificate."
  community.crypto.x509_certificate:
    path: "{{ autonomy_ownca_ca_certs_directory }}/{{ autonomy_org_name }}-{{ item.name }}-ca.crt"
    csr_path: "{{ autonomy_ownca_ca_directory }}/csr/{{ autonomy_org_name }}-{{ item.name }}-ca.csr"
    ownca_path: "{{ autonomy_ownca_ca_certs_directory }}/{{ autonomy_org_name }}-{{ item.org_unit_name }}-ca.crt"
    ownca_privatekey_path: "{{ autonomy_ownca_ca_privatekey_directory }}/{{ autonomy_org_name }}-{{ item.org_unit_name }}-ca.key"
    ownca_privatekey_passphrase: "{{ lookup('community.general.passwordstore', __password_lookup) }}"
    provider: "{{ item.provider }}"
    backup: yes
    owner: "{{ autonomy_user }}"
    group: "{{ autonomy_group }}"
    force: "{{ __ownca_issuingca_cert_force_regeneration }}"
  loop: "{{ autonomy_ownca_certificate_authorities }}"
  delegate_to: localhost
  become: no
  vars:
    __password_store_id: "{{ autonomy_passdb }}/{{ item.domain }}/ownca/ownca_intermediate_password"
    __password_lookup: "{{ __password_store_id }}"
  notify:
    - "regenerate host certificates"
    - "regenerate user certificates"
  when:
    - item.provider == "ownca"
    - item.ownca == "intermediate"
  tags:
    - ownca
    - ownca-root
    - ownca-intermediate
    - ownca-issuing

# ==================================================================================================
#
# We run the handlers here, and not in the main.yml to be able to skip this step when it's not
# needed.
#
# ==================================================================================================
- name: "Run handlers now."
  ansible.builtin.meta: flush_handlers
  tags:
    - ownca
    - ownca-root
    - ownca-intermediate
    - ownca-issuing
